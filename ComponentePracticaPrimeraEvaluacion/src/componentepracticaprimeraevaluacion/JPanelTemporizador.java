/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package componentepracticaprimeraevaluacion;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Tony
 */
public class JPanelTemporizador extends JPanel {

  private javax.swing.Timer t;
    private int h, m, s, cs;
    private String tiempo;
    private TemporizadorListener temporizadorListener;
   
    
    
        private ActionListener acciones = new ActionListener(){

          
        @Override
        public void actionPerformed(ActionEvent ae) {
            ++cs; 
            if(cs==100){
                cs = 0;
                ++s;
            }
            if(s==60) 
            {
                s = 0;
                ++m;
            }
            if(m==60)
            {
                m = 0;
                ++h;
            }
            actualizarLabel();
        }
        
    };
        
        public void iniciar(ActionListener acciones){
             t = new javax.swing.Timer(10, acciones);
        t.start();
          
        }
        
        
           private void actualizarLabel() {
            
       tiempo = (h<=9?"0":"")+h+":"+(m<=9?"0":"")+m+":"+(s<=9?"0":"")+s+":"+(cs<=9?"0":"")+cs;
        labelTemporizador.setText(tiempo);
        
    }
    public JPanelTemporizador() {
        initComponents();
          iniciar(acciones);
          
     this.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent me) {
 
           
            temporizadorListener.parar();

        
            }
   
        
        });
         t = new javax.swing.Timer(10, acciones);
        t.start();
          
    }

    public TemporizadorListener getTemporizadorListener() {
        return temporizadorListener;
    }

    public void setTemporizadorListener(TemporizadorListener temporizadorListener) {
        this.temporizadorListener = temporizadorListener;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTemporizador = new java.awt.Label();

        labelTemporizador.setAlignment(java.awt.Label.CENTER);
        labelTemporizador.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labelTemporizador, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTemporizador, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label labelTemporizador;
    // End of variables declaration//GEN-END:variables
}
